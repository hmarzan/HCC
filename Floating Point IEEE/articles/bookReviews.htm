<html>
<head>
<title>Reviews of the 4th Edition</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body bgcolor="#FFFFFF">
<table width="100%" border="0" cellspacing="0" cellpadding="3">
  <tr bgcolor="#FF3333"> 
    <td width="100%"><font size="5" face="Times New Roman, Times, serif"><b><font color="#FFFFFF">Reviews 
      of the 4th Edition</font></b></font></td>
  </tr>
</table>
<p>We thought you might like to read some representative reviews of the 4th Edition: 
</p>
<p><a href="http://books.slashdot.org/books/02/09/02/2122241.shtml?tid=156">Slashdot.org, 
  9/4/02</a>, by Alexander Moskalyuk</p>
<p><a href="#Cahill">Amazon.com, 8/6/02, by Gerald Cahill </a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h3><br>
</h3>
<hr>
<h3><a name="Cahill"></a>Gerald Cahill from Lancaster, CA, </h3>
<p>August 6, 2002 </p>
<p>This text addresses the needs of students who can write programs in a high-level 
  language and wish to learn assembly language for the Intel family of microprocessors. 
  The forth edition contains an abundance of new material. The author introduces 
  32-bit protect-mode programming using the Microsoft Windows platform and he 
  delays coverage of 16-bit real-mode programming using the MS-DOS platform until 
  chapter 13. Only MS-DOS programming was covered in the previous edition. Each 
  section contains review questions and each chapter ends with a summary and several 
  programming exercises. The author clearly describes each concept and uses excellent 
  diagrams and code examples throughout the text. Several new topics have been 
  added to this edition such as graphics programming in both Windows and DOS applications.</p>
<p>The early chapters present an overview of the Intel IA-32 architecture and 
  cover the principles and techniques of programming Windows console applications 
  in assembly language. The author has encapsulated the details of the Windows 
  application interface in his 32-bit library, which the students use throughout 
  the first 10 chapters. This allows the students to focus on learning and using 
  the instruction set to create solutions to the programming problems. The details 
  of his library routines are revealed in Chapter 11. Chapter 12 covers assembly 
  language routines that can be called from a high-level language. Both 32-bit 
  and 16-bit C/C++ compilers are used in the examples. The remaining chapters 
  (13 through 17) cover 16-bit real-mode MS-DOS and BIOS programming in much the 
  same way as was done in the third edition, but many more example programs have 
  been added.</p>
<p>A CD-ROM accompanies this text and contains the complete Microsoft Macro Assembler 
  (MASM 6.15), Microsoft's 32-bit and 16-bit Linkers, all example programs from 
  the text, the source code for the author's 32-bit and 16-bit link libraries, 
  and many more useful files. Chapter 17, Advanced Topics, is contained on the 
  CD-ROM and is not printed in the textbook.</p>
<p>The author's web site ... contains an abundance of support material which he 
  keeps current. Most useful are a list of corrections to the textbook, updates 
  to the files contained on the CD-ROM, and the answers to the odd-numbered Review 
  Questions. There are instructions for installing the assembler, configuring 
  and using various integrated development environments, and links to other useful 
  information such as the MASM 6 manual set and the author's e-mail address. Five 
  chapters from the textbook are posted on his site for your review. Professors 
  can access a password-protected area that contains answers to all of the review 
  questions, solutions to the programming exercises, and a set of PowerPoint slides 
  for use in the classroom.</p>
<p>Assembly language is much easier to learn when protect-mode is covered before 
  real-mode. Early use of flat addressing allows coverage of segmented addressing 
  to be delayed until the students have learned the complete instruction set. 
  Flat addressing also makes it easy to locate run-time errors. The addresses 
  contained in the Windows run-time error dialog box corresponds with the addresses 
  in the linker's map file and the assembler's list file. The topics flow better 
  when the simpler Windows interface is covered before the more complex interrupt 
  service routines of MS-DOS and BIOS.</p>
<p>I have successfully used the previous edition of this textbook for several 
  semesters. Including techniques for protect-mode programming in the forth edition 
  provides the additional information most often requested by students. This review 
  is based on material I received from the publisher as a reviewer.</p>
<p></p>
</body>
</html>
